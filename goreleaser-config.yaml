project_name: yaml-reader
release:
  github:
    owner: gertd
    name: yaml-reader
  name_template: yaml-reader {{.Tag}}
brews:
  - name: yaml-reader
    tap:
      owner: gertd
      name: homebrew-tap
    commit_author:
      name: Gert Drapers
      email: gert@d5s.io
    commit_msg_template: Brew formula update for {{ .ProjectName }} version {{ .Tag }}
    install: |
      bin.install "yaml-reader"
    test: |
      system "#{bin}/yaml-reader version"
    description: yaml reader
    homepage: https://github.com/gertd/yaml-reader/
    license: MIT
    skip_upload: "false"
    url_template: https://github.com/gertd/yaml-redare/releases/download/{{ .Tag }}/{{ .ArtifactName }}
    goarm: "6"
    goamd64: v1
scoop:
  name: yaml-reader
  commit_author:
    name: goreleaserbot
    email: bot@goreleaser.com
  commit_msg_template: Scoop update for {{ .ProjectName }} version {{ .Tag }}
  goamd64: v1
builds:
  - id: build
    goos:
      - darwin
    goarch:
      - arm64
    goarm:
      - "6"
    gomips:
      - hardfloat
    goamd64:
      - v1
    targets:
      - darwin_arm64
    ignore:
      - goos: windows
        goarch: arm64
    dir: .
    main: ./cmd/yaml-reader
    binary: yaml-reader
    builder: go
    mod_timestamp: '{{ .CommitTimestamp }}'
    gobinary: go
    command: build
    ldflags:
      - -s
      - -w
      - -X github.com/gertd/yaml-reader/pkg/version.ver={{.Version}}
      - -X github.com/gertd/yaml-reader/pkg/version.commit={{.ShortCommit}}
      - -X github.com/gertd/yaml-reader/pkg/version.date={{.Date}}
    env:
      - CGO_ENABLED=0
archives:
  - id: default
    name_template: '{{ .ProjectName }}_ {{- title .Os }}_ {{- if eq .Arch "amd64" }}x86_64 {{- else if eq .Arch "386" }}i386 {{- else }}{{ .Arch }}{{ end }}'
    format: zip
    files:
      - src: LICENSE
      - src: README.md
snapshot:
  name_template: '{{ .Tag }}'
checksum:
  name_template: checksums.txt
  algorithm: sha256
changelog:
  filters:
    exclude:
      - '^docs:'
      - '^test:'
  sort: asc
dist: dist
env_files:
  github_token: ~/.config/goreleaser/github_token
  gitlab_token: ~/.config/goreleaser/gitlab_token
  gitea_token: ~/.config/goreleaser/gitea_token
source:
  name_template: '{{ .ProjectName }}-{{ .Version }}'
  format: tar.gz
gomod:
  gobinary: go
announce:
  twitter:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
  mastodon:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    server: ""
  reddit:
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    url_template: '{{ .ReleaseURL }}'
  slack:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    username: GoReleaser
  discord:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    author: GoReleaser
    color: "3888754"
    icon_url: https://goreleaser.com/static/avatar.png
  teams:
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    color: '#2D313E'
    icon_url: https://goreleaser.com/static/avatar.png
  smtp:
    subject_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    body_template: 'You can view details from: {{ .ReleaseURL }}'
  mattermost:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    username: GoReleaser
  linkedin:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
  telegram:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
  webhook:
    message_template: '{ "message": "{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}"}'
    content_type: application/json; charset=utf-8
git:
  tag_sort: -version:refname
github_urls:
  download: https://github.com
gitlab_urls:
  download: https://gitlab.com
